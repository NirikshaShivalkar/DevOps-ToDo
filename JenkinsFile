pipeline {
    agent any

    environment {
        VIRTUAL_ENV = "venv"
    }

    stages {
        stage("Git Clone") {
            steps {
                git(
                    credentialsId: 'c7c078f8-e44a-4217-a0ba-0e48a22bfd02',
                    branch: 'main',
                    url: 'https://github.com/NirikshaShivalkar/DevOps-ToDo.git'
                )
                bat "dir /s"  // Debugging: List files after cloning
            }
        }

        stage('Set Up Python Environment') {
            steps {
                bat '''
                    echo "üîπ Checking if Python is installed..."
                    python --version || exit /b 1

                    echo "üîπ Creating virtual environment..."
                    python -m venv venv

                    echo "üîπ Activating virtual environment..."
                    call venv\\Scripts\\activate

                    echo "üîπ Checking if requirements.txt exists..."
                    if not exist requirements.txt (
                        echo "‚ùå ERROR: requirements.txt not found!"
                        exit /b 1
                    )

                    echo "üîπ Upgrading pip and installing dependencies..."
                    python -m pip install --upgrade pip
                    python -m pip install -r requirements.txt

                    if errorlevel 1 (
                        echo "‚ùå ERROR: Dependency installation failed!"
                        exit /b 1
                    )
                '''
            }
        }

        stage('Run Tests') {
            steps {
                bat '''
                    echo "üîπ Running Tests..."
                    call venv\\Scripts\\activate
                    pytest --junitxml=report.xml

                    if errorlevel 1 (
                        echo "‚ùå Tests Failed!"
                        exit /b 1
                    )
                '''
            }
        }
    }

    post {
        always {
            junit 'report.xml'
        }
        failure {
            echo '‚ùå Test Failed! Stopping here.'
        }
        success {
            echo '‚úÖ All tests passed! You can build or deploy in the future.'
        }
    }
}
